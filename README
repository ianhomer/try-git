Try git

# Rebase Experiments

Make change

    ./make-change.sh

Rebase off master so that commits as if replayed on top of latest master :

    git fetch
    git checkout experiment/change
    git rebase master

And then squash commits, by choosing which commits you want to squash (or fixup) into single commit :

    git log --graph --decorate --pretty=oneline --abbrev-commit -n 20
    git rebase -i [SHA]
    git push origin experiment/change --force

Merge to master and clean up old branch, as per PR merge

    git checkout master
    git merge experiment/change
    git push origin master
    git branch -d experiment/change
    git push origin --delete experiment/change

# Conflict Experiments

Make conflicts

    ./make-conflicts.sh

Then pull conflicts into feature branch

    git checkout experiment/conflicting
    git pull origin master

Resolve by fixing merges in files/conflictable.txt

    git commit -am "Resolve conflicts"

Merge feature branch to master

    git checkout master
    git merge experiment/conflicting
    git push
    git branch -d experiment/conflicting
    git push origin --delete experiment/conflicting
